#include <gtk/gtk.h>
int count=0;


struct Stack
{
        int size;
        int top;
        GtkWidget *w[100];
};
typedef struct Stack stack;

int push_f(stack *s,GtkWidget *t)
{
        if(s->top == s->size-1)
        {
                return 11;
        }
        s->top++;
	s->w[s->top]=t;
        return 0;
}

int pop_f(stack *s,GtkWidget **t)
{
        if(s -> top == -1)
        {
                return 22;
        }

	*t = s->w[s->top];
        s->top--;
        return 0;
}

int display_f(stack s)
{
        if(s.top == -1)
        {
                return 11;
        }
        for(int i=s.top;i >= 0;i--)
        {
                printf("%d\n",i+1);
        }
        return 0;
}

void print_got (GtkWidget *widget,gpointer data)
{
  g_print ("Got A button\n");
}

struct t {
	stack s;
	GtkWidget *window;
	GtkWidget *fixed;
};
void push_got (GtkWidget *widget,GtkWidget *data, GtkWidget *data2)
{
  GtkWidget *button;
  g_print ("Pressed PUSH button\n");


  	button = gtk_button_new_with_label ("Pushed BUTTON");
	push_f(&(((struct t *)data2)->s),button);

  	gtk_fixed_put(GTK_FIXED(((struct t *)data2)->fixed), button, 100, 550-(count*50));
  	gtk_widget_set_size_request(button, 80, 30);

  count++;
	gtk_widget_show_all(((struct t *)data2)->window);

}

void pop_got (GtkWidget *widget,GtkWidget *data,GtkWidget *data2)
{
        GtkWidget *button;
	pop_f(&(((struct t *)data2)->s),&button);
        gtk_container_remove (GTK_CONTAINER(((struct t *)data2)->fixed),button);
	gtk_widget_show_all(((struct t *)data2)->window);

}


void activate (GtkApplication* app, gpointer user_data)
{
  GtkWidget *window;
  GtkWidget *fixed;

  GtkWidget *button;

  window = gtk_application_window_new (app);
  gtk_window_set_title(GTK_WINDOW (window), "Window");
  gtk_window_set_default_size (GTK_WINDOW (window), 600, 600);
  gtk_window_set_position(GTK_WINDOW(window), GTK_WIN_POS_CENTER);


  fixed = gtk_fixed_new();
  gtk_container_add (GTK_CONTAINER (window), fixed);

  int i=1;

  button = gtk_button_new_with_label ("PUSH");
  static struct t temp;
  temp.window=window;
  temp.fixed=fixed;
  g_signal_connect (button, "clicked", G_CALLBACK (push_got), &temp);

  gtk_fixed_put(GTK_FIXED(fixed), button, 400, 50);
  gtk_widget_set_size_request(button, 80, 30);



  /*gtk_container_add (GTK_CONTAINER (fixed), button); */

  button = gtk_button_new_with_label ("POP");
  g_signal_connect (button, "clicked", G_CALLBACK (pop_got), &temp);

  gtk_fixed_put(GTK_FIXED(fixed), button, 400, 100);
  gtk_widget_set_size_request(button, 80, 30);

  /*gtk_container_add (GTK_CONTAINER (fixed), button); */


	gtk_widget_show_all(window);

}


int main (int    argc, char **argv)
{
  GtkApplication *app;
  int status;

  app = gtk_application_new ("org.gtk.example", G_APPLICATION_FLAGS_NONE);
  g_signal_connect (app, "activate", G_CALLBACK (activate), NULL);
  status = g_application_run (G_APPLICATION (app), argc, argv);
  g_object_unref (app);

  return status;
}
